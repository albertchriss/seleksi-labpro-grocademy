version: '3.8'

services:
  # NestJS Application Service
  grocademy_app:
    container_name: grocademy_app
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '${APP_PORT:-3000}:3000'
    depends_on:
      postgres_db:
        condition: service_healthy # Waits for the database to be ready
    networks:
      - grocademy_network

  # PostgreSQL Database Service
  postgres_db:
    image: postgres:16-alpine
    container_name: grocademy_postgres_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: grocademy_dev
      POSTGRES_USER: grocademy_user
      POSTGRES_PASSWORD: grocademy_password
    ports:
      - '5433:5432' # Exposes the DB on port 5433 on your host machine
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U grocademy_user -d grocademy_dev']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - grocademy_network

volumes:
  postgres_db_data:
    driver: local

networks:
  grocademy_network:
    driver: bridge
