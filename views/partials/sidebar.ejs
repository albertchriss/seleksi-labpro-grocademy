<div
  class="w-64 gradient-primary text-white flex flex-col h-screen sticky top-0"
>
  <div class="p-6 border-b border-blue-600">
    <div class="flex items-center gap-2">
      <div
        class="w-10 h-10 gradient-gold rounded-lg flex items-center justify-center text-xl"
      >
        ðŸŽ“
      </div>
      <div>
        <h1 class="font-bold text-xl">Grocademy</h1>
        <p class="text-blue-200 text-sm">Gro Academy</p>
      </div>
    </div>
  </div>

  <div class="flex-1 py-6">
    <div class="px-4 mb-4">
      <p class="text-blue-200 text-sm font-medium uppercase tracking-wider">
        NAVIGATION
      </p>
    </div>

    <nav class="space-y-1 px-4">
      <a
        href="/courses"
        class="sidebar-item <%= activeMenu === 'courses' ? 'active' : '' %> flex items-center gap-3 px-4 py-3 rounded-lg transition-colors"
      >
        <span>ðŸ“š</span>
        <span class="font-medium">Courses</span>
      </a>
      <a
        href="/my-courses"
        class="sidebar-item <%= activeMenu === 'my-courses' ? 'active' : '' %> flex items-center gap-3 px-4 py-3 rounded-lg transition-colors"
      >
        <span>ðŸŽ“</span>
        <span class="font-medium">My Courses</span>
      </a>
    </nav>
  </div>

  <div class="p-4 border-t border-blue-600">
    <div class="flex items-center gap-3">
      <img
        id="profile-picture"
        class="w-10 h-10 rounded-full bg-blue-500 object-cover bg-white"
        src="/images/default-profile.svg"
        alt="Profile Picture"
      />
      <div class="flex-1 min-w-0">
        <p id="profile-name" class="font-semibold text-sm text-white truncate">
          Loading...
        </p>
        <p id="profile-email" class="text-xs text-blue-200 truncate">...</p>
      </div>
    </div>
  </div>

  <div class="p-4 border-t border-blue-600">
    <button
      onclick="logout()"
      class="sidebar-item flex items-center gap-3 px-4 py-3 rounded-lg transition-colors w-full text-left"
    >
      <span>ðŸšª</span>
      <span class="font-medium">Logout</span>
    </button>
  </div>
</div>

<script>
  function logout() {
    localStorage.removeItem('token');
    window.location.href = '/login';
  }

  (async function validateAndLoadUser() {
    const token = localStorage.getItem('token');

    // Select profile elements
    const profilePicEl = document.getElementById('profile-picture');
    const profileNameEl = document.getElementById('profile-name');
    const profileEmailEl = document.getElementById('profile-email');

    // Default SVG avatar (a simple user icon)
    const defaultAvatar = '/images/default-profile.svg';

    if (!token) {
      logout();
      return;
    }

    try {
      const response = await fetch('/api/auth/self', {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      if (response.ok) {
        const user = await response.json();

        const fullName =
          `${user.data.first_name || ''} ${user.data.last_name || ''}`.trim();
        const fullEmail = user.data.email || 'No email';

        // Set the visible text
        profileNameEl.textContent = fullName;
        profileEmailEl.textContent = fullEmail;

        // Set the title attribute to create a hover tooltip
        profileNameEl.title = fullName;
        profileEmailEl.title = fullEmail;
        profilePicEl.src = user.data.profile_pic || defaultAvatar;
        if (user.data.profile_pic) {
          profilePicEl.classList.remove('p-1');
        } else {
          profilePicEl.classList.add('p-1');
        }
      } else if (response.status === 401) {
        console.error('Session token is invalid or expired.');
        logout();
      } else {
        // Handle other server errors (e.g., 500)
        profileNameEl.textContent = 'Error loading user';
      }
    } catch (error) {
      console.error('Error validating session:', error);
      profileNameEl.textContent = 'Connection Error';
    }
  })();
</script>
