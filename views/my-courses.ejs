<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Grocademy - My Courses</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      .gradient-primary {
        background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
      }
      .gradient-gold {
        background: linear-gradient(135deg, #ffd700 0%, #ffb347 100%);
      }
      .sidebar-item:hover {
        background-color: rgba(255, 255, 255, 0.1);
      }
      .sidebar-item.active {
        background-color: #ffd700;
        color: #1d4ed8;
      }
    </style>
  </head>
  <body class="bg-gray-100 min-h-screen flex">
    <%- include('partials/sidebar', { activeMenu: 'my-courses' }) %>

    <!-- Main Content -->
    <div class="flex-1 flex flex-col">
      <!-- Header -->
      <div class="bg-white border-b border-gray-200 px-8 py-6">
        <div class="flex justify-between items-center">
          <div>
            <h1 class="text-3xl font-bold text-gray-900">My Courses</h1>
            <p class="text-gray-600 mt-1">Kursus yang sudah Anda beli</p>
          </div>
        </div>
      </div>

      <!-- Search and Filters -->
      <div class="bg-white border-b border-gray-200 px-8 py-4">
        <div class="flex items-center gap-4">
          <div class="flex-1 relative">
            <input
              type="text"
              id="search-input"
              placeholder="Cari kursus yang sudah dibeli"
              class="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
            <div class="absolute left-4 top-1/2 transform -translate-y-1/2">
              <span class="text-gray-400">üîç</span>
            </div>
            <button 
              onclick="searchCourses()"
              class="absolute right-2 top-1/2 transform -translate-y-1/2 bg-blue-500 text-white px-4 py-1.5 rounded-lg text-sm hover:bg-blue-600 transition-colors"
            >
              Cari
            </button>
          </div>
        </div>
      </div>

      <!-- Course Content -->
      <div class="flex-1 p-8">
        <div id="loading" class="text-center py-12">
          <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
          <p class="mt-2 text-gray-600">Memuat kursus...</p>
        </div>

        <div id="error-container" class="hidden">
          <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg">
            <p class="font-medium">Gagal memuat kursus</p>
            <p class="text-sm mt-1">Silakan coba lagi nanti atau hubungi administrator.</p>
          </div>
        </div>

        <div id="courses-container" class="hidden">
          <%- include('partials/course-card') %>
          <!-- Course Grid -->
          <div id="courses-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-8">
            <!-- Course cards will be inserted here -->
          </div>

          <div class="flex justify-between mb-3">
            <div class="gap-2 flex items-center">
              Menampilkan 
              <select 
                id="per-page-select" 
                onchange="changePerPage()"
                class="border border-gray-300 rounded-xl px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
              >
                <option value="10">10</option>
                <option value="20">20</option>
                <option value="50">50</option>
              </select>
              Kursus
            </div>
            <p id="pagination-info">
            </p>
          </div>
          <!-- Pagination -->
          <div id="pagination-container" class="flex justify-center items-center gap-2">
            <!-- Pagination will be inserted here -->
          </div>

        <!-- Empty State -->
        <div id="empty-state" class="hidden text-center py-12">
          <div class="text-6xl mb-4">üéì</div>
          <h3 class="text-xl font-semibold text-gray-900 mb-2">Belum ada kursus yang dibeli</h3>
          <p class="text-gray-600 mb-6">Mulai belajar dengan membeli kursus pertama Anda.</p>
          <a 
            href="/courses"
            class="inline-block gradient-primary text-white px-6 py-3 rounded-xl font-semibold hover:shadow-lg transition-shadow"
          >
            Lihat Semua Kursus
          </a>
        </div>
      </div>
    </div>

    <script>
      let searchQuery = '';
      let currentPage = 1;
      let perPage = 10;
      let totalPages = 1;
      let totalItems = 0;

      async function loadMyCourses() {
        const token = localStorage.getItem('token');
        
        if (!token) {
          window.location.href = '/login';
          return;
        }

        try {
          showLoading();

          const params = new URLSearchParams({
            page: currentPage.toString(),
            limit: perPage.toString(),
            ...(searchQuery && { q: searchQuery })
          });

          const response = await fetch(`/api/courses/my-courses?${params}`, {
            headers: {
              'Authorization': `Bearer ${token}`,
            },
          });

          if (response.ok) {
            const result = await response.json();
            let courses = result.data;
            displayCourses(result.data);
            setupPagination(result.pagination || { current_page: 1, total_items: 0, total_pages: 1 });
          } else if (response.status === 401) {
            logout();
          } else {
            showError();
          }
        } catch (error) {
          console.error('Error loading my courses:', error);
          showError();
        }
      }

      function displayCourses(courses) {
        const template = document.getElementById('course-template');
        const container = document.getElementById('courses-grid');
        const coursesContainer = document.getElementById('courses-container');
        const emptyState = document.getElementById('empty-state');
        const loading = document.getElementById('loading');
        const errorContainer = document.getElementById('error-container');        

        loading.classList.add('hidden');
        errorContainer.classList.add('hidden');

        if (courses.length === 0) {
          coursesContainer.classList.add('hidden');
          emptyState.classList.remove('hidden');
          return;
        }

        emptyState.classList.add('hidden');
        coursesContainer.classList.remove('hidden');
        
        container.innerHTML = '';

        courses.forEach(course => {
          const clone = template.content.cloneNode(true);

          clone.querySelector('.course-title').textContent = course.title || 'Untitled Course';
          clone.querySelector('.course-description').classList.add('hidden');
          clone.querySelector('.course-instructor').textContent = `by ${course.instructor || 'Unknown'}`;
          clone.querySelector('.course-price').textContent = `${course.progress_percentage || 0}%`;
          clone.querySelector('.course-anchor').href = `/courses/${course.id}`;
          clone.querySelector('.course-button').onclick = (e) => {
            e.preventDefault();
            viewCourse(course.id);
          }

          if (course.thumbnail_image){
            clone.querySelector('.course-image').src = course.thumbnail_image;
            clone.querySelector('.course-image').classList.remove('hidden');
            clone.querySelector('.image-placeholder').classList.add('hidden');
          }

          container.appendChild(clone);
        });
      }

      function setupPagination(pagination) {
        totalPages = pagination.total_pages || 1;
        totalItems = pagination.total_items || 0;
        const container = document.getElementById('pagination-container');
        const info = document.getElementById('pagination-info');

        info.textContent = `Menampilkan ${(currentPage-1) * perPage + 1} hingga ${Math.min(currentPage * perPage, totalItems)} dari ${totalItems} entri`;

        let paginationHTML = '';
        
        // Previous button
        if (currentPage > 1) {
          paginationHTML += `
            <button onclick="goToPage(${currentPage - 1})" class="px-3 py-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50">
              ‚Üê
            </button>
          `;
        }
        
        // Page numbers
        const startPage = Math.max(1, currentPage - 2);
        const endPage = Math.min(totalPages, currentPage + 2);
        
        if (startPage > 1) {
          paginationHTML += `
            <button onclick="goToPage(1)" class="px-3 py-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50">1</button>
          `;
          if (startPage > 2) {
            paginationHTML += `<span class="px-2 text-gray-500">...</span>`;
          }
        }
        
        for (let i = startPage; i <= endPage; i++) {
          const isActive = i === currentPage;
          paginationHTML += `
            <button 
              onclick="goToPage(${i})" 
              class="px-3 py-2 text-sm border rounded-lg ${isActive ? 'bg-blue-600 text-white border-blue-600' : 'border-gray-300 hover:bg-gray-50'}"
            >
              ${i}
            </button>
          `;
        }
        
        if (endPage < totalPages) {
          if (endPage < totalPages - 1) {
            paginationHTML += `<span class="px-2 text-gray-500">...</span>`;
          }
          paginationHTML += `
            <button onclick="goToPage(${totalPages})" class="px-3 py-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50">${totalPages}</button>
          `;
        }
        
        // Next button
        if (currentPage < totalPages) {
          paginationHTML += `
            <button onclick="goToPage(${currentPage + 1})" class="px-3 py-2 text-sm border border-gray-300 rounded-lg hover:bg-gray-50">
              ‚Üí
            </button>
          `;
        }
        
        container.innerHTML = paginationHTML;
      }

      function goToPage(page) {
        currentPage = page;
        loadMyCourses();
      }

      function changePerPage() {
        perPage = parseInt(document.getElementById('per-page-select').value);
        currentPage = 1;
        loadMyCourses();
      }

      function searchCourses() {
        searchQuery = document.getElementById('search-input').value.trim();
        loadMyCourses();
      }

      function showLoading() {
        document.getElementById('loading').classList.remove('hidden');
        document.getElementById('courses-container').classList.add('hidden');
        document.getElementById('empty-state').classList.add('hidden');
        document.getElementById('error-container').classList.add('hidden');
      }

      function showError() {
        document.getElementById('loading').classList.add('hidden');
        document.getElementById('courses-container').classList.add('hidden');
        document.getElementById('empty-state').classList.add('hidden');
        document.getElementById('error-container').classList.remove('hidden');
      }

      function viewCourse(id) {
        window.location.href = `/courses/${id}/modules`;
      }

      function logout() {
        localStorage.removeItem('token');
        window.location.href = '/login';
      }

      // Search on Enter key
      document.getElementById('search-input').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          searchCourses();
        }
      });

      // Load courses when page loads
      document.addEventListener('DOMContentLoaded', loadMyCourses);

      // Check if already logged in
      const token = localStorage.getItem('token');
      if (!token) {
        window.location.href = '/login';
      }
    </script>
  </body>
</html>
