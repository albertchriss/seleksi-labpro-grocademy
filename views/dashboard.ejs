<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Grocademy - Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      .gradient-primary {
        background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
      }
    </style>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <div
      class="bg-white border-b border-gray-200 px-8 py-4 flex justify-between items-center"
    >
      <div class="flex items-center gap-2 text-2xl font-bold text-primary-600">
        <span>ðŸŽ“</span>
        <span>Grocademy</span>
      </div>
      <div class="flex items-center gap-4">
        <span id="user-name" class="text-gray-700">Loading...</span>
        <button
          onclick="logout()"
          class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg text-sm transition-colors"
        >
          Logout
        </button>
      </div>
    </div>

    <div class="max-w-6xl mx-auto p-8">
      <div id="loading" class="text-center py-8">
        <div
          class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"
        ></div>
        <p class="mt-2 text-gray-600">Loading user data...</p>
      </div>

      <div id="dashboard-content" class="hidden">
        <div class="gradient-primary text-white p-8 rounded-2xl mb-8">
          <h1 class="text-4xl font-bold mb-2">Welcome to Grocademy!</h1>
          <p class="text-blue-100">
            Manage your courses and explore the platform.
          </p>
        </div>

        <div
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-4 gap-6"
        >
          <div
            class="bg-white p-6 rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow"
          >
            <h3 class="text-gray-900 font-semibold mb-2">API Documentation</h3>
            <p class="text-gray-600 text-sm mb-4">
              Explore all available API endpoints and test them interactively.
            </p>
            <a
              href="/api-docs"
              target="_blank"
              class="inline-block bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
            >
              Open Swagger UI
            </a>
          </div>

          <div
            class="bg-white p-6 rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow"
          >
            <h3 class="text-gray-900 font-semibold mb-2">Course Management</h3>
            <p class="text-gray-600 text-sm mb-4">
              Create, update, and manage courses through the API.
            </p>
            <a
              href="/api-docs#/courses"
              target="_blank"
              class="inline-block bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
            >
              View Endpoints
            </a>
          </div>

          <div
            class="bg-white p-6 rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow"
          >
            <h3 class="text-gray-900 font-semibold mb-2">User Management</h3>
            <p class="text-gray-600 text-sm mb-4">
              Manage users, update balances, and view user data.
            </p>
            <a
              href="/api-docs#/users"
              target="_blank"
              class="inline-block bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
            >
              View Endpoints
            </a>
          </div>

          <div
            class="bg-white p-6 rounded-xl shadow-sm border border-gray-100 hover:shadow-md transition-shadow"
          >
            <h3 class="text-gray-900 font-semibold mb-2">Authentication</h3>
            <p class="text-gray-600 text-sm mb-4">
              Handle user authentication and authorization.
            </p>
            <a
              href="/api-docs#/auth"
              target="_blank"
              class="inline-block bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
            >
              View Endpoints
            </a>
          </div>
        </div>

        <!-- User Stats Section -->
        <div class="mt-8 grid grid-cols-1 md:grid-cols-3 gap-6">
          <div class="bg-white p-6 rounded-xl shadow-sm border border-gray-100">
            <div class="flex items-center justify-between">
              <div>
                <p class="text-gray-600 text-sm">Balance</p>
                <p id="user-balance" class="text-2xl font-bold text-green-600">
                  -
                </p>
              </div>
              <div
                class="w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center"
              >
                ðŸ’°
              </div>
            </div>
          </div>


          <div class="bg-white p-6 rounded-xl shadow-sm border border-gray-100">
            <div class="flex items-center justify-between">
              <div>
                <p class="text-gray-600 text-sm">Status</p>
                <p class="text-2xl font-bold text-blue-600">Active</p>
              </div>
              <div
                class="w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center"
              >
                âœ…
              </div>
            </div>
          </div>
        </div>
      </div>

      <div id="error-container"></div>
    </div>

    <script>
      async function loadUserData() {
        const token = localStorage.getItem('token');

        if (!token) {
          window.location.href = '/login';
          return;
        }

        try {
          const response = await fetch('/api/auth/self', {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          });

          if (response.ok) {
            const result = await response.json();
            const user = result.data;

            document.getElementById('user-name').textContent =
              `${user.first_name} ${user.last_name} (${user.username})`;
            document.getElementById('user-balance').textContent =
              `$${user.balance.toLocaleString()}`;

            document.getElementById('loading').classList.add('hidden');
            document
              .getElementById('dashboard-content')
              .classList.remove('hidden');
          } else {
            throw new Error('Failed to load user data');
          }
        } catch (error) {
          document.getElementById('loading').classList.add('hidden');
          document.getElementById('error-container').innerHTML =
            `<div class="bg-red-100 border border-red-200 text-red-700 px-4 py-3 rounded-lg">
                        Failed to load user data. Please login again.
                    </div>`;

            setTimeout(() => {
              logout();
            }, 2000);
        }
      }

      function logout() {
        localStorage.removeItem('token');
        window.location.href = '/login';
      }

      // Load user data when page loads
      document.addEventListener('DOMContentLoaded', loadUserData);
    </script>
  </body>
</html>
